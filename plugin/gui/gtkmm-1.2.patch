Only in gtkmm-1.2.10.c++_fixes/src: Makefile
Only in gtkmm-1.2.10.c++_fixes/src/build_sources: Makefile
diff -ru gtkmm-1.2.10/src/build_sources/proxy.h.m4 gtkmm-1.2.10.c++_fixes/src/build_sources/proxy.h.m4
--- gtkmm-1.2.10/src/build_sources/proxy.h.m4	2000-03-02 21:08:28.000000000 +0100
+++ gtkmm-1.2.10.c++_fixes/src/build_sources/proxy.h.m4	2004-08-18 15:16:43.000000000 +0200
@@ -174,20 +174,20 @@
           data.callback=&callback;
           data.obj=this;
           SigC::ScopeNode* node=tmp->receiver();
-          obj->register_data(node);
+          this->obj->register_data(node);
           return tmp;
         }
 
       RType emit(ARG_BOTH($1))
         {
           return reinterpret_cast<RType (*)(LIST(gObj*,1,ARG_TYPE($1),[$1]))>
-            (emit_func) (LIST(obj->gtkobj(),1,ARG_NAME($1),[$1]));
+            (emit_func) (LIST(this->obj->gtkobj(),1,ARG_NAME($1),[$1]));
         }
 
       RType operator()(ARG_BOTH($1))
         {
           return reinterpret_cast<RType (*)(LIST(gObj*,1,ARG_TYPE($1),[$1]))>
-            (emit_func) (LIST(obj->gtkobj(),1,ARG_NAME($1),[$1]));
+            (emit_func) (LIST(this->obj->gtkobj(),1,ARG_NAME($1),[$1]));
         }
 
   };
diff -ru gtkmm-1.2.10/src/curve.gen_h gtkmm-1.2.10.c++_fixes/src/curve.gen_h
--- gtkmm-1.2.10/src/curve.gen_h	2001-07-15 15:33:38.000000000 +0200
+++ gtkmm-1.2.10.c++_fixes/src/curve.gen_h	2004-08-18 15:52:14.000000000 +0200
@@ -143,8 +143,8 @@
       int i;
       Iterator iter;
       for (iter=b,i=0;iter!=e;++iter,i++);
-      gfloat data[]=new gfloat[i];
-      get_vector(n,data);
+      gfloat *data=new gfloat[i];
+      get_vector(i,data);
       for (iter=b,i=0;iter!=e;++iter,i++)
         (*iter)=data[i];
       delete [] data;
diff -ru gtkmm-1.2.10/src/gtk--/base.h gtkmm-1.2.10.c++_fixes/src/gtk--/base.h
--- gtkmm-1.2.10/src/gtk--/base.h	2001-12-06 16:32:51.000000000 +0100
+++ gtkmm-1.2.10.c++_fixes/src/gtk--/base.h	2004-08-18 15:56:06.000000000 +0200
@@ -132,6 +132,8 @@
   }
 */
 
+Gtk::Object* wrap (GtkObject *o);    
+    
 /********************************************************************/
 
 /* this class is a required stub implementation which does nothing! */
@@ -482,7 +484,7 @@
   value_type operator*() const
   {
     if (node && node->data)
-      return Gtk::wrap(static_cast<impl*>((*node).data));
+      return static_cast<value_type>(Gtk::wrap(static_cast<GtkObject*>((*node).data)));
     return 0;
   }
 
